version: '3'

services:
  redis:
    image: redis:latest
    restart: on-failure
    expose:
      - "6379"

  db:
    image: postgres
    restart: on-failure
    environment:
      POSTGRES_DB: ${NAME}
      POSTGRES_USER: ${OWNER}
      POSTGRES_PASSWORD: ${PASSWORD}
    expose:
      - '5432'
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${NAME} -U ${OWNER}" ]
      interval: 10s
      retries: 5
      timeout: 5s

  app:
    build: .
    tty: true
    ports:
      - '8000:8000'
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/code
    env_file:
      - .env

  celery:
    build: .
    tty: true
    command: celery -A config worker -l INFO
    restart: on-failure
    volumes:
      - .:/code
    depends_on:
      - redis
      - db
      - app
    env_file:
      - .env

  celery-beat:
    build: .
    tty: true
    command: celery -A config beat -l INFO
    restart: on-failure
    volumes:
      - .:/code
    depends_on:
      - redis
      - db
      - app
    env_file:
      - .env

volumes:
  pg_data: